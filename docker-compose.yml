version: '3'

networks:
  server_network:
    driver: bridge

volumes:
  mongodb_data:
  api_gateway:

services:
  
  mongo:
    image: mongo:latest
    restart: always
    container_name: mongo_db
    env_file:
      - .env
    volumes:
      - ./mongodb_data:/data/db
    networks:
      - server_network
    ports:
      - $MONGODB_LOCAL_PORT:$MONGODB_DOCKER_PORT
    logging:
      driver: none

  create_microservice:
    build: ./app/create_microservice
    container_name: create_microservice_app
    env_file:
      - .env
    depends_on:
      - mongo
    networks:
      - server_network
    ports:
      - $NODE_CREATE_LOCAL_PORT:$NODE_CREATE_DOCKER_PORT

  read_microservice:
    build: ./app/read_microservice
    container_name: read_microservice_app
    env_file:
      - .env
    depends_on:
      - mongo
    networks:
      - server_network
    ports:
      - $NODE_READ_LOCAL_PORT:$NODE_READ_DOCKER_PORT

  update_microservice:
    build: ./app/update_microservice
    container_name: update_microservice_app
    env_file:
      - .env
    depends_on:
      - mongo
    networks:
      - server_network
    ports:
      - $NODE_UPDATE_LOCAL_PORT:$NODE_UPDATE_DOCKER_PORT

  delete_microservice:
    build: ./app/delete_microservice
    container_name: delete_microservice_app
    env_file:
      - .env
    depends_on:
      - mongo
    networks:
      - server_network
    ports:
      - $NODE_DELETE_LOCAL_PORT:$NODE_DELETE_DOCKER_PORT

  log_service:
    build: ./log
    container_name: log_service_app
    env_file:
      - .env
    depends_on:
      - mongo
    networks:
      - server_network
    ports:
      - $NODE_LOG_LOCAL_PORT:$NODE_LOG_DOCKER_PORT

  kong_gateway:
    image: kong:latest
    hostname: kong
    env_file:
      - .env
    container_name: kong_gateway_app
    environment:
      - KONG_DATABASE=off
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
      - KONG_DECLARATIVE_CONFIG=/kong/declarative/kong.yml
      - KONG_DNS_ORDER=LAST,A,CNAME
      - KONG_PLUGINS=cors,http-log,pre-function
      - ORIGIN_URL=$ORIGIN_URL
    depends_on:
      - create_microservice
      - read_microservice
      - update_microservice
      - delete_microservice
      - log_service
    volumes:
      - ./api_gateway:/kong/declarative/
    networks:
      - server_network
    ports:
      - "8000:8000"
      - "8443:8443"
      - "127.0.0.1:8001:8001"
      - "127.0.0.1:8444:8444"